TITLE: Write C++ program to draw the following pattern. Use DDA line and Bresenham‗s circle
drawing algorithm. Apply the concept of encapsulation
PROBLEM STATEMENT: To draw the following pattern. Use DDA line and Bresenham‗s circle
drawing algorithm
OBJECTIVE:
 To understand the DDA and Bresenham‗s algorithm Line drawing Algorithm.
 To understand the Midpoint and Bresenham‘s Circle drawing algorithm.
 To understand the basics of inscribed and Circumscribed Circles.
THEORY:
DDA Line Drawing Algorithm
DDA algorithm is an incremental scan conversion method. Here we perform calculations at each step using
the results from the preceding step. The characteristic of the DDA algorithm is to take unit steps along one
coordinate and compute the corresponding values along the other coordinate. The unit steps are always
along the coordinate of greatest change.
DDA Algorithm
Procedure DDA( x1, y1, x2, y2: integer);
dx, dy, steps: integer;
x_inc, y_inc, x, y: real;
begin
dx := x2 - x1; dy := y2 - y1;
if abs(dx) > abs(dy) then
steps := abs(dx); {steps is larger of dx, dy}
else
steps := abs(dy);
x_inc := dx/steps; y_inc := dy/steps;
{eitherx_inc or y_inc = 1.0, the other is the slope}
OOP & COMPUTER GRAPHICS LAB S.E.(Sem-I) [2022-23]
49 Department of Computer Engineering, DYPIEMR, Pune
x:=x1; y:=y1;
set_pixel(round(x), round(y));
for i := 1 to steps do
begin
x := x + x_inc;
y := y + y_inc;
set_pixel(round(x), round(y));
end; 
end;
Advantages of DDA Algorithm
 It is the simplest algorithm and it does not require special skills for implementation.
 It is a faster meth
 for calculating pixel positions than the direct use of equation y = mx + b. It eliminates the
multiplication in the equation by making use of raster characteristics, so that appropriate increments
are applied in the x or v direction to find the pixel positions along the line path.
Disadvantages of DDAAlgorithm
1. Floating point arithmetic in DDA algorithm is still time-consuming.
2. The algorithm is orientation dependent. Hence end point accuracy is poor.
Let us see few examples to illustrate this algorithm.
Circle Drawing Algorithms:
Bresenham’s Circle drawing algorithm:-
This algorithm does only integer arithmetic which make it faster than floating points. We are creating only
one octant of the circle i.e., from 90 degree to 45 degree.
We can derive other seven octants of the circle by symmetry property.
The circle is generated by considering center points as origin with radius ‘r‘.This algorithm creates one
pixel per step.From any point (xn,yn) on the circle, next point (xn+1,yn+1) must be either one on right or one
to the right and down.
We cannot display a continuous arc on the raster display. Instead, we have to choose the nearest pixel
position to complete the arc.
OOP & COMPUTER GRAPHICS LAB S.E.(Sem-I) [2022-23]
50 Department of Computer Engineering, DYPIEMR, Pune
From the following illustration, you can see that we have put the pixel at (X, Y) location and now need to
decide where to put the next pixel − at N (X+1, Y) or at S (X+1, Y-1).
Midpoint circle drawing algorithm
In computer graphics, the midpoint circle algorithm is an algorithm used to determine the points needed
for drawing a circle. The algorithm is a variant of Bresenham's line algorithm, and is thus sometimes
known as Bresenham's circle algorithm, although not actually invented by Jack E. Bresenham. The
Midpoint circle drawing algorithm works on the same midpoint concept as the Bresenham‘s line
algorithm. In the Midpoint circle drawing algorithm, you determine the next pixel to be plotted based on
the position of the midpoint between the current and next consecutive pixel.
Platform Required:
Fig 6.1 Midpoint circle Algorithm
 Microsoft Windows 7/ Windows 8 Operating System onwards or 64-bit Open source Linux
or its derivative.
Algorithm :
Bresenham’s Algorithm to Draw a Circle.
7. Start.
8. Declare variables x,y,p and also declare gdriver=DETECT,gmode.
9. Initialise the graphic mode with the path location in TC folder.
10. Input the radius of the circle r.
11. Load x-0,y=r,initial decision parameter p=1-r.so the first point is (0,r).
12. Repeat Step 7 while (x<y) and increment x-value simultaneously. 7. If
(p>0),
do p=p+2*(x-y)+1.
13. Otherwise p=p+2*x+1
and
y is decremented simultaneously.
OOP & COMPUTER GRAPHICS LAB S.E.(Sem-I) [2022-23]
51 Department of Computer Engineering, DYPIEMR, Pune
14. Then calculate the value of the function circlepoints() with p.arameters (x,y).
15. Place pixels using putpixel at points (x+300,y+300) in specified colour in
circlepoints() function shifting the origin to 300 on both x-axis and y-axis.
16. Close Graph.
17. Stop.
CONCLUSION: Thus we have seen the two line drawing algorithms, the two Circle drawing algorithm
and successfully implemented the given pattern.
